/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    sites: Site;
    themes: Theme;
    entities: Entity;
    'site-user-roles': SiteUserRole;
    'site-user-assignments': SiteUserAssignment;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    sites: SitesSelect<false> | SitesSelect<true>;
    themes: ThemesSelect<false> | ThemesSelect<true>;
    entities: EntitiesSelect<false> | EntitiesSelect<true>;
    'site-user-roles': SiteUserRolesSelect<false> | SiteUserRolesSelect<true>;
    'site-user-assignments': SiteUserAssignmentsSelect<false> | SiteUserAssignmentsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  /**
   * Nome completo do usuário
   */
  name: string;
  /**
   * Nível de acesso do usuário
   */
  roles: ('admin' | 'editor' | 'user')[];
  /**
   * Foto de perfil do usuário
   */
  avatar?: (number | null) | Media;
  /**
   * Breve biografia do usuário
   */
  bio?: string | null;
  /**
   * Preferências do usuário
   */
  preferences?: {
    /**
     * Habilitar modo escuro na interface
     */
    darkMode?: boolean | null;
    /**
     * Receber notificações por email
     */
    emailNotifications?: boolean | null;
    /**
     * Idioma preferido
     */
    language?: ('pt' | 'en' | 'es') | null;
  };
  /**
   * Associações deste usuário com sites específicos
   */
  siteRoles?: (number | SiteUserAssignment)[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  /**
   * Texto alternativo para acessibilidade
   */
  alt: string;
  /**
   * Legenda opcional para exibição
   */
  caption?: string | null;
  /**
   * Créditos ou atribuição da mídia
   */
  credits?: string | null;
  /**
   * Categoria da mídia para organização
   */
  category?: ('image' | 'document' | 'video' | 'audio' | 'other') | null;
  /**
   * Tags para facilitar a busca
   */
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-user-assignments".
 */
export interface SiteUserAssignment {
  id: number;
  user: number | User;
  site: number | Site;
  role: number | SiteUserRole;
  /**
   * Dados personalizados deste usuário para o site
   */
  customData?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Indica se este acesso está ativo
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sites".
 */
export interface Site {
  id: number;
  /**
   * Nome do site
   */
  name: string;
  /**
   * Descrição breve do site
   */
  description?: string | null;
  /**
   * Domínios associados a este site
   */
  domains: {
    /**
     * Formato: exemplo.com (sem http/https)
     */
    domain: string;
    /**
     * Marcar como domínio principal
     */
    isPrimary?: boolean | null;
    id?: string | null;
  }[];
  /**
   * Tema aplicado a este site
   */
  theme: number | Theme;
  /**
   * Usuário proprietário deste site
   */
  owner: number | User;
  /**
   * Papéis de usuário disponíveis neste site
   */
  siteRoles?: (number | SiteUserRole)[] | null;
  /**
   * Status atual do site
   */
  status: 'draft' | 'published' | 'archived' | 'maintenance';
  /**
   * Configurações gerais do site
   */
  settings?: {
    /**
     * Favicon do site
     */
    favicon?: (number | null) | Media;
    /**
     * Logo principal do site
     */
    logo?: (number | null) | Media;
    /**
     * Configurações de analytics
     */
    analytics?: {
      /**
       * ID do Google Analytics (formato: G-XXXXXXXX ou UA-XXXXXXXX-X)
       */
      googleAnalyticsId?: string | null;
      /**
       * Habilitar sistema básico de analytics interno
       */
      enableBasicAnalytics?: boolean | null;
    };
    /**
     * Redes sociais
     */
    social?: {
      /**
       * URL da página do Facebook
       */
      facebook?: string | null;
      /**
       * URL da página do Instagram
       */
      instagram?: string | null;
      /**
       * URL da página do Twitter
       */
      twitter?: string | null;
      /**
       * URL da página do LinkedIn
       */
      linkedin?: string | null;
    };
    /**
     * Configurações avançadas
     */
    advanced?: {
      /**
       * CSS personalizado para o site inteiro
       */
      customCSS?: string | null;
      /**
       * JavaScript personalizado para o site inteiro
       */
      customJS?: string | null;
      /**
       * Código adicional para o <head> do site (meta tags, scripts, etc)
       */
      headerCode?: string | null;
      /**
       * Código adicional para antes do </body> do site
       */
      footerCode?: string | null;
    };
  };
  /**
   * Configurações de SEO globais
   */
  seo?: {
    /**
     * Título padrão do site
     */
    defaultTitle?: string | null;
    /**
     * Separador usado no título (ex: "Página | Site")
     */
    titleSeparator?: string | null;
    /**
     * Meta descrição padrão
     */
    defaultDescription?: string | null;
    /**
     * Imagem padrão para compartilhamento em redes sociais
     */
    defaultOgImage?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "themes".
 */
export interface Theme {
  id: number;
  /**
   * Nome do tema
   */
  name: string;
  /**
   * Descrição do tema
   */
  description?: string | null;
  /**
   * Versão do tema (semver: x.y.z)
   */
  version?: string | null;
  /**
   * Autor/criador do tema
   */
  author: number | User;
  /**
   * Imagem de visualização do tema
   */
  thumbnail?: (number | null) | Media;
  /**
   * Status atual do tema
   */
  status: 'draft' | 'review' | 'published' | 'disabled';
  /**
   * Status de validação do tema
   */
  validationStatus?: ('pending' | 'valid' | 'invalid') | null;
  /**
   * Resultados da validação do tema
   */
  validationResults?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Este é um tema do sistema (não pode ser excluído)
   */
  isSystem?: boolean | null;
  /**
   * Templates disponíveis neste tema
   */
  templates?:
    | {
        /**
         * Nome do template
         */
        name: string;
        /**
         * Chave única do template (ex: home, page, post)
         */
        key: string;
        description?: string | null;
        thumbnail?: (number | null) | Media;
        /**
         * Usar como template padrão
         */
        defaultTemplate?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Estilos CSS principais do tema
   */
  mainStyles: string;
  /**
   * Estilos CSS específicos para componentes
   */
  componentStyles?: string | null;
  /**
   * Layouts disponíveis no tema
   */
  layouts?:
    | {
        name: string;
        key: string;
        /**
         * Template HTML do layout (usando tags Astro)
         */
        template: string;
        isDefault?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Componentes disponíveis neste tema
   */
  components?:
    | {
        name: string;
        key: string;
        description?: string | null;
        category?: ('layout' | 'navigation' | 'content' | 'media' | 'form' | 'ecommerce' | 'other') | null;
        /**
         * Template HTML do componente (usando tags Astro)
         */
        template: string;
        /**
         * Estilos CSS específicos deste componente
         */
        styles?: string | null;
        /**
         * JavaScript associado ao componente (se necessário)
         */
        script?: string | null;
        /**
         * Esquema dos dados aceitos pelo componente
         */
        schema?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Scripts globais do tema
   */
  globalScripts?: string | null;
  /**
   * Dependências externas necessárias para este tema
   */
  dependencies?:
    | {
        /**
         * Nome da dependência
         */
        name: string;
        /**
         * Versão da dependência
         */
        version?: string | null;
        type?: ('css' | 'js' | 'font' | 'other') | null;
        /**
         * URL da dependência (CDN ou similar)
         */
        url?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Configurações do tema
   */
  settings?: {
    /**
     * Paleta de cores do tema
     */
    colors?:
      | {
          /**
           * Nome da cor (ex: primária, secundária)
           */
          name: string;
          /**
           * Chave da cor (para uso na CSS var)
           */
          key: string;
          /**
           * Valor da cor (ex: #FF5500)
           */
          value: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Fontes utilizadas no tema
     */
    fonts?:
      | {
          /**
           * Nome da fonte
           */
          name: string;
          /**
           * Chave da fonte (para uso na CSS var)
           */
          key: string;
          /**
           * Font-family (ex: "Roboto, sans-serif")
           */
          family: string;
          /**
           * URL para importação da fonte (se aplicável)
           */
          url?: string | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Sistema de espaçamento do tema
     */
    spacing?:
      | {
          /**
           * Nome do espaçamento (ex: pequeno, médio)
           */
          name: string;
          /**
           * Chave do espaçamento (para uso na CSS var)
           */
          key: string;
          /**
           * Valor do espaçamento (ex: 0.5rem, 16px)
           */
          value: string;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-user-roles".
 */
export interface SiteUserRole {
  id: number;
  /**
   * Nome do papel de usuário (ex: Cliente, Membro, Professor)
   */
  name: string;
  /**
   * Identificador único (ex: cliente, membro, professor)
   */
  slug: string;
  /**
   * Site ao qual este papel pertence
   */
  site: number | Site;
  /**
   * Descrição detalhada deste papel de usuário
   */
  description?: string | null;
  /**
   * Permissões específicas para este papel
   */
  permissions?:
    | {
        resource: 'pages' | 'posts' | 'products' | 'media' | 'settings' | 'users' | 'forms';
        actions: ('read' | 'create' | 'update' | 'delete')[];
        id?: string | null;
      }[]
    | null;
  /**
   * Campos personalizados para usuários com este papel
   */
  customFields?:
    | {
        fieldName: string;
        fieldType: 'text' | 'number' | 'email' | 'date' | 'select' | 'checkbox';
        required?: boolean | null;
        options?:
          | {
              label: string;
              value: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "entities".
 */
export interface Entity {
  id: number;
  /**
   * O título da entidade
   */
  title: string;
  /**
   * O tipo de entidade determina seu comportamento e campos disponíveis
   */
  type: 'post' | 'page' | 'product' | 'category' | 'navigation' | 'form' | 'settings';
  /**
   * URL amigável para a entidade (deve ser única)
   */
  slug: string;
  /**
   * Conteúdo principal da entidade
   */
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Dados estruturados para armazenar campos dinâmicos
   */
  jsonContent?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Status de publicação da entidade
   */
  status: 'draft' | 'published' | 'archived';
  /**
   * Site ao qual esta entidade pertence
   */
  site: number | Site;
  /**
   * Imagem principal da entidade
   */
  featuredImage?: (number | null) | Media;
  /**
   * Configurações de SEO
   */
  seo?: {
    /**
     * Título específico para SEO (deixe em branco para usar o título da entidade)
     */
    title?: string | null;
    /**
     * Meta descrição para SEO
     */
    description?: string | null;
    /**
     * Palavras-chave separadas por vírgula
     */
    keywords?: string | null;
    /**
     * Imagem para compartilhamento em redes sociais
     */
    ogImage?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'sites';
        value: number | Site;
      } | null)
    | ({
        relationTo: 'themes';
        value: number | Theme;
      } | null)
    | ({
        relationTo: 'entities';
        value: number | Entity;
      } | null)
    | ({
        relationTo: 'site-user-roles';
        value: number | SiteUserRole;
      } | null)
    | ({
        relationTo: 'site-user-assignments';
        value: number | SiteUserAssignment;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  roles?: T;
  avatar?: T;
  bio?: T;
  preferences?:
    | T
    | {
        darkMode?: T;
        emailNotifications?: T;
        language?: T;
      };
  siteRoles?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  credits?: T;
  category?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sites_select".
 */
export interface SitesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  domains?:
    | T
    | {
        domain?: T;
        isPrimary?: T;
        id?: T;
      };
  theme?: T;
  owner?: T;
  siteRoles?: T;
  status?: T;
  settings?:
    | T
    | {
        favicon?: T;
        logo?: T;
        analytics?:
          | T
          | {
              googleAnalyticsId?: T;
              enableBasicAnalytics?: T;
            };
        social?:
          | T
          | {
              facebook?: T;
              instagram?: T;
              twitter?: T;
              linkedin?: T;
            };
        advanced?:
          | T
          | {
              customCSS?: T;
              customJS?: T;
              headerCode?: T;
              footerCode?: T;
            };
      };
  seo?:
    | T
    | {
        defaultTitle?: T;
        titleSeparator?: T;
        defaultDescription?: T;
        defaultOgImage?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "themes_select".
 */
export interface ThemesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  version?: T;
  author?: T;
  thumbnail?: T;
  status?: T;
  validationStatus?: T;
  validationResults?: T;
  isSystem?: T;
  templates?:
    | T
    | {
        name?: T;
        key?: T;
        description?: T;
        thumbnail?: T;
        defaultTemplate?: T;
        id?: T;
      };
  mainStyles?: T;
  componentStyles?: T;
  layouts?:
    | T
    | {
        name?: T;
        key?: T;
        template?: T;
        isDefault?: T;
        id?: T;
      };
  components?:
    | T
    | {
        name?: T;
        key?: T;
        description?: T;
        category?: T;
        template?: T;
        styles?: T;
        script?: T;
        schema?: T;
        id?: T;
      };
  globalScripts?: T;
  dependencies?:
    | T
    | {
        name?: T;
        version?: T;
        type?: T;
        url?: T;
        id?: T;
      };
  settings?:
    | T
    | {
        colors?:
          | T
          | {
              name?: T;
              key?: T;
              value?: T;
              id?: T;
            };
        fonts?:
          | T
          | {
              name?: T;
              key?: T;
              family?: T;
              url?: T;
              id?: T;
            };
        spacing?:
          | T
          | {
              name?: T;
              key?: T;
              value?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "entities_select".
 */
export interface EntitiesSelect<T extends boolean = true> {
  title?: T;
  type?: T;
  slug?: T;
  content?: T;
  jsonContent?: T;
  status?: T;
  site?: T;
  featuredImage?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-user-roles_select".
 */
export interface SiteUserRolesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  site?: T;
  description?: T;
  permissions?:
    | T
    | {
        resource?: T;
        actions?: T;
        id?: T;
      };
  customFields?:
    | T
    | {
        fieldName?: T;
        fieldType?: T;
        required?: T;
        options?:
          | T
          | {
              label?: T;
              value?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-user-assignments_select".
 */
export interface SiteUserAssignmentsSelect<T extends boolean = true> {
  user?: T;
  site?: T;
  role?: T;
  customData?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}