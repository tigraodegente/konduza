---
// src/layouts/AdminLayout.astro

interface Props {
  title: string;
  currentSection?: string;
  userData?: {
    name: string;
    email: string;
    roles: string[];
  };
}

// As páginas filhas devem passar os dados do usuário como propriedade
const { title, currentSection = 'dashboard', userData = { name: 'Administrador', email: '', roles: [] } } = Astro.props;
---

<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{title} | Konduza Admin</title>
  <link rel="stylesheet" href="/admin/css/admin.css">
</head>
<body>
  <div class="admin-layout">
    <header class="admin-header">
      <div class="admin-header-left">
        <div class="mobile-menu-toggle">
          <button id="mobile-menu-btn">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon-menu">
              <line x1="3" y1="12" x2="21" y2="12"></line>
              <line x1="3" y1="6" x2="21" y2="6"></line>
              <line x1="3" y1="18" x2="21" y2="18"></line>
            </svg>
          </button>
        </div>
        <a href="/admin" class="admin-logo">
          <span class="logo-text">Konduza</span>
        </a>
        <nav class="admin-main-nav">
          <a href="/admin/sites" class={currentSection === 'sites' ? 'active' : ''}>Sites</a>
          <a href="/admin/themes" class={currentSection === 'themes' ? 'active' : ''}>Temas</a>
          <a href="/admin/media" class={currentSection === 'media' ? 'active' : ''}>Mídia</a>
          <a href="/admin/entities" class={currentSection === 'entities' ? 'active' : ''}>Entidades</a>
          <a href="/admin/users" class={currentSection === 'users' ? 'active' : ''}>Usuários</a>
          <a href="/admin/settings" class={currentSection === 'settings' ? 'active' : ''}>Configurações</a>
        </nav>
      </div>
      <div class="admin-header-right">
        <div class="admin-search">
          <input type="text" placeholder="Buscar..." />
          <button type="submit">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon-search">
              <circle cx="11" cy="11" r="8"></circle>
              <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
            </svg>
          </button>
        </div>
        <div class="admin-notifications">
          <button class="notifications-toggle">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon-bell">
              <path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path>
              <path d="M13.73 21a2 2 0 0 1-3.46 0"></path>
            </svg>
            <span class="notification-badge">3</span>
          </button>
          <!-- Dropdown de notificações será implementado com JavaScript -->
        </div>
        <div class="admin-profile">
          <button class="profile-toggle">
            <img src="/admin/avatar.jpg" alt={userData.name} />
            <span class="hidden md:inline ml-2">{userData.name}</span>
          </button>
          <div class="profile-dropdown hidden">
            <div class="dropdown-header">
              <strong>{userData.name}</strong>
              <span>{userData.email}</span>
              <div class="user-role">{userData.roles.includes('admin') ? 'Administrador' : 'Usuário'}</div>
            </div>
            <div class="dropdown-menu">
              <a href="/admin/profile">Meu Perfil</a>
              <a href="/admin/settings">Configurações</a>
              <a href="#" id="logout-button">Sair</a>
            </div>
          </div>
        </div>
      </div>
    </header>
    
    <div class="admin-content-wrapper">
      <aside class="admin-sidebar">
        {currentSection === 'dashboard' && (
          <div class="sidebar-section">
            <h3>Dashboard</h3>
            <ul>
              <li><a href="/admin" class="active">Visão Geral</a></li>
              <li><a href="/admin/activity">Atividade Recente</a></li>
              <li><a href="/admin/analytics">Analytics</a></li>
            </ul>
          </div>
        )}
        
        {currentSection === 'sites' && (
          <div class="sidebar-section">
            <h3>Sites</h3>
            <ul>
              <li><a href="/admin/sites">Todos os Sites</a></li>
              <li><a href="/admin/sites/criar">Criar Novo Site</a></li>
              <li><a href="/admin/sites/dominios">Gerenciar Domínios</a></li>
            </ul>
          </div>
        )}
        
        {currentSection === 'themes' && (
          <div class="sidebar-section">
            <h3>Temas</h3>
            <ul>
              <li><a href="/admin/themes">Biblioteca de Temas</a></li>
              <li><a href="/admin/themes/editor">Editor de Tema</a></li>
              <li><a href="/admin/themes/componentes">Componentes</a></li>
              <li><a href="/admin/themes/cores">Cores e Estilos</a></li>
            </ul>
          </div>
        )}
        
        {currentSection === 'media' && (
          <div class="sidebar-section">
            <h3>Mídia</h3>
            <ul>
              <li><a href="/admin/media">Biblioteca de Mídia</a></li>
              <li><a href="/admin/media/upload">Upload de Arquivos</a></li>
              <li><a href="/admin/media/pastas">Gerenciar Pastas</a></li>
            </ul>
          </div>
        )}
        
        {currentSection === 'entities' && (
          <div class="sidebar-section">
            <h3>Entidades</h3>
            <ul>
              <li><a href="/admin/entities">Todas as Entidades</a></li>
              <li><a href="/admin/entities/esquemas">Esquemas</a></li>
              <li><a href="/admin/entities/dados">Visualizar Dados</a></li>
            </ul>
          </div>
        )}
        
        {currentSection === 'users' && (
          <div class="sidebar-section">
            <h3>Usuários</h3>
            <ul>
              <li><a href="/admin/users">Todos os Usuários</a></li>
              <li><a href="/admin/users/criar">Adicionar Usuário</a></li>
              <li><a href="/admin/users/permissoes">Permissões</a></li>
            </ul>
          </div>
        )}
        
        {currentSection === 'settings' && (
          <div class="sidebar-section">
            <h3>Configurações</h3>
            <ul>
              <li><a href="/admin/settings">Configurações Gerais</a></li>
              <li><a href="/admin/settings/integracao">Integrações</a></li>
              <li><a href="/admin/settings/seguranca">Segurança</a></li>
            </ul>
          </div>
        )}
        
        <div class="sidebar-toggle">
          <button id="sidebar-toggle-btn">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="sidebar-icon">
              <polyline points="15 18 9 12 15 6"></polyline>
            </svg>
          </button>
        </div>
      </aside>
      
      <main class="admin-content">
        <slot />
      </main>
    </div>
    
    <footer class="admin-footer">
      <div class="footer-copyright">
        &copy; 2025 Konduza. Todos os direitos reservados.
      </div>
      <div class="footer-links">
        <a href="/docs">Documentação</a>
        <a href="/support">Suporte</a>
        <a href="/terms">Termos</a>
      </div>
      <div class="footer-version">
        Versão 1.0.0
      </div>
    </footer>
  </div>

  <script>
    // Scripts para funcionalidades interativas do admin
    document.addEventListener('DOMContentLoaded', () => {
      const sidebarToggleBtn = document.getElementById('sidebar-toggle-btn');
      const mobileMenuBtn = document.getElementById('mobile-menu-btn');
      const adminLayout = document.querySelector('.admin-layout');
      const adminSidebar = document.querySelector('.admin-sidebar');
      const profileToggle = document.querySelector('.profile-toggle');
      const profileDropdown = document.querySelector('.profile-dropdown');
      const logoutButton = document.getElementById('logout-button');
      
      // Os dados do usuário já estão disponíveis no HTML através do servidor
      
      // Armazenar preferência do usuário para o estado da sidebar
      const saveSidebarState = (collapsed) => {
        localStorage.setItem('sidebar_collapsed', collapsed ? 'true' : 'false');
      };
      
      // Recuperar preferência do usuário
      const getSidebarState = () => {
        return localStorage.getItem('sidebar_collapsed') === 'true';
      };
      
      // Inicializar com a preferência salva
      if (getSidebarState()) {
        adminLayout.classList.add('sidebar-collapsed');
      } else {
        adminLayout.classList.remove('sidebar-collapsed');
      }
      
      // Toggle da sidebar desktop
      if (sidebarToggleBtn) {
        sidebarToggleBtn.addEventListener('click', () => {
          const isCollapsed = adminLayout.classList.toggle('sidebar-collapsed');
          saveSidebarState(isCollapsed);
        });
      }
      
      // Toggle do menu mobile
      if (mobileMenuBtn) {
        mobileMenuBtn.addEventListener('click', () => {
          adminLayout.classList.toggle('sidebar-expanded');
          
          // Adicionar overlay para fechar o menu ao clicar fora
          if (adminLayout.classList.contains('sidebar-expanded')) {
            const overlay = document.createElement('div');
            overlay.className = 'sidebar-overlay';
            overlay.addEventListener('click', () => {
              adminLayout.classList.remove('sidebar-expanded');
              document.body.removeChild(overlay);
            });
            document.body.appendChild(overlay);
          } else {
            const overlay = document.querySelector('.sidebar-overlay');
            if (overlay) {
              document.body.removeChild(overlay);
            }
          }
        });
      }
      
      // Toggle do menu de perfil
      if (profileToggle && profileDropdown) {
        profileToggle.addEventListener('click', (e) => {
          e.stopPropagation();
          profileDropdown.classList.toggle('hidden');
        });
        
        // Fechar ao clicar fora
        document.addEventListener('click', () => {
          profileDropdown.classList.add('hidden');
        });
        
        profileDropdown.addEventListener('click', (e) => {
          e.stopPropagation();
        });
      }
      
      // Logout
      if (logoutButton) {
        logoutButton.addEventListener('click', async (e) => {
          e.preventDefault();
          
          try {
            const API_URL = import.meta.env.PAYLOAD_URL || 'http://localhost:3000';
            
            // Chamar API de logout do Payload CMS
            const response = await fetch(`${API_URL}/api/users/logout`, {
              method: 'POST',
              credentials: 'include',
              headers: {
                'Content-Type': 'application/json'
              }
            });
            
            // Mesmo se falhar, vamos limpar o localStorage e redirecionar
            localStorage.removeItem('konduza_user');
            
            // Redirecionar para página de login
            window.location.href = '/login';
          } catch (error) {
            console.error('Erro ao fazer logout:', error);
            
            // Em caso de erro, ainda limpar dados locais e redirecionar
            localStorage.removeItem('konduza_user');
            window.location.href = '/login';
          }
        });
      }
      
      // Responsividade em dispositivos móveis
      const mobileBreakpoint = 768;
      const tabletBreakpoint = 1024;
      
      function handleResize() {
        const windowWidth = window.innerWidth;
        
        if (windowWidth < mobileBreakpoint) {
          // Em dispositivos móveis, sempre começar com sidebar fechada
          adminLayout.classList.remove('sidebar-expanded');
          adminLayout.classList.remove('sidebar-collapsed'); // Resetar para estado padrão no mobile
        } else if (windowWidth < tabletBreakpoint) {
          // Em tablets, colapsar a sidebar se não houver preferência explícita
          if (localStorage.getItem('sidebar_collapsed') === null) {
            adminLayout.classList.add('sidebar-collapsed');
          }
        } else {
          // Em desktops, respeitar a preferência do usuário
          // Ou abrir completamente se não houver preferência
          if (localStorage.getItem('sidebar_collapsed') === null) {
            adminLayout.classList.remove('sidebar-collapsed');
          }
        }
      }
      
      // Verificar no carregamento e no resize
      handleResize();
      window.addEventListener('resize', handleResize);
    });
  </script>
</body>
</html>