---
// src/layouts/AdminLayout.astro
import UserAvatar from '../components/UserAvatar.astro';

interface Props {
  title: string;
  currentSection?: string;
  userData?: {
    name: string;
    email: string;
    roles: string[];
    avatarUrl?: string;
  };
}

// As páginas filhas devem passar os dados do usuário como propriedade
const { title, currentSection = 'dashboard', userData = { name: 'Administrador', email: '', roles: [], avatarUrl: '' } } = Astro.props;

// Importar estilos do tema selecionado
const adminTheme = Astro.cookies.get('admin_theme')?.value || 'default';

// Função para obter temas disponíveis para o admin
const getAvailableThemes = () => {
  return [
    { id: 'default', name: 'Tema Padrão' },
    { id: 'dark', name: 'Tema Escuro' },
    { id: 'default-theme', name: 'Site Default Theme' },
    // Outros temas disponíveis
  ];
};

// Função para obter metadados do tema
const getThemeMetadata = (themeKey) => {
  try {
    const themes = {
      'default': {
        name: "Tema Padrão Konduza",
        type: "internal",
        colors: {
          primary: "#4f46e5",
          secondary: "#64748b",
          background: "#f9fafb"
        }
      },
      'dark': {
        name: "Tema Escuro Konduza",
        type: "internal",
        colors: {
          primary: "#6366f1",
          secondary: "#64748b",
          background: "#1e1e2e"
        }
      },
      'default-theme': {
        name: "Tema Padrão Konduza Site",
        type: "site",
        colors: {
          primary: "#7752FE",
          secondary: "#2EC4B6",
          background: "#FFFFFF"
        }
      }
    };
    
    return themes[themeKey] || null;
  } catch (error) {
    console.error('Erro ao carregar tema:', error);
    return null;
  }
};

const themeData = getThemeMetadata(adminTheme);
const availableThemes = getAvailableThemes();
---

<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{title} | Konduza Admin</title>
  
  <!-- Base Admin CSS -->
  <link rel="stylesheet" href="/admin/css/admin.css">
  
  <!-- Tema dinâmico baseado nas configurações -->
  {adminTheme !== 'default' && <link rel="stylesheet" href={`/admin/themes/${adminTheme}.css`} />}
  
  <style define:vars={{
    "themeColorPrimary": themeData?.colors?.primary || '#4f46e5',
    "themeColorSecondary": themeData?.colors?.secondary || '#64748b',
    "themeColorBackground": themeData?.colors?.background || '#f9fafb'
  }}>
    /* Variáveis de cores dinâmicas do tema selecionado */
    :root {
      --primary: var(--themeColorPrimary);
      --secondary: var(--themeColorSecondary);
      --bg-light: var(--themeColorBackground);
    }
    
    /* Estilos para tratamento de imagens quebradas */
    .theme-thumbnail {
      position: relative;
      overflow: hidden;
      background-color: #f0f2f5;
      border-radius: 0.375rem;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .theme-thumbnail img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: all 0.3s ease;
    }
    
    .theme-thumbnail-fallback {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: #f0f2f5;
      color: #6b7280;
      font-weight: 500;
    }
    
    .theme-thumbnail-fallback svg {
      width: 40%;
      height: 40%;
      opacity: 0.5;
    }
  </style>
</head>
<body>
  <div class="admin-layout">
    <header class="admin-header">
      <div class="admin-header-left">
        <div class="mobile-menu-toggle">
          <button id="mobile-menu-btn">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon-menu">
              <line x1="3" y1="12" x2="21" y2="12"></line>
              <line x1="3" y1="6" x2="21" y2="6"></line>
              <line x1="3" y1="18" x2="21" y2="18"></line>
            </svg>
          </button>
        </div>
        <a href="/admin" class="admin-logo">
          <span class="logo-text">Konduza</span>
        </a>
        <nav class="admin-main-nav">
          <a href="/admin/sites" class={currentSection === 'sites' ? 'active' : ''}>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-1"><rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><circle cx="8.5" cy="8.5" r="1.5"></circle><polyline points="21 15 16 10 5 21"></polyline></svg>
            Sites
          </a>
          <a href="/admin/themes" class={currentSection === 'themes' ? 'active' : ''}>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-1"><circle cx="12" cy="12" r="10"></circle><path d="M17.8 12.2l-5.4 5.4a1 1 0 0 1-1.4 0l-5.4-5.4a1 1 0 0 1 0-1.4L11 5.4a1 1 0 0 1 1.4 0l5.4 5.4a1 1 0 0 1 0 1.4z"></path></svg>
            Temas
          </a>
          <a href="/admin/media" class={currentSection === 'media' ? 'active' : ''}>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-1"><rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><circle cx="8.5" cy="8.5" r="1.5"></circle><polyline points="21 15 16 10 5 21"></polyline></svg>
            Mídia
          </a>
          <a href="/admin/content" class={currentSection === 'content' ? 'active' : ''}>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-1"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="16" y1="13" x2="8" y2="13"></line><line x1="16" y1="17" x2="8" y2="17"></line><polyline points="10 9 9 9 8 9"></polyline></svg>
            Conteúdo
          </a>
          <a href="/admin/users" class={currentSection === 'users' ? 'active' : ''}>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-1"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg>
            Usuários
          </a>
          <a href="/admin/settings" class={currentSection === 'settings' ? 'active' : ''}>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-1"><circle cx="12" cy="12" r="3"></circle><path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path></svg>
            Configurações
          </a>
        </nav>
      </div>
      <div class="admin-header-right">
        <div class="admin-search">
          <input type="text" placeholder="Buscar..." />
          <button type="submit">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon-search">
              <circle cx="11" cy="11" r="8"></circle>
              <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
            </svg>
          </button>
        </div>
        <div class="admin-notifications">
          <button class="notifications-toggle">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon-bell">
              <path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path>
              <path d="M13.73 21a2 2 0 0 1-3.46 0"></path>
            </svg>
            <span class="notification-badge">3</span>
          </button>
          <!-- Dropdown de notificações será implementado com JavaScript -->
        </div>
        <div class="admin-profile">
          <button class="profile-toggle">
            <UserAvatar name={userData.name} avatarUrl={userData.avatarUrl} size="md" />
            <span class="hidden md:inline ml-2">{userData.name}</span>
          </button>
          <div class="profile-dropdown hidden">
            <div class="dropdown-header">
              <strong>{userData.name}</strong>
              <span>{userData.email}</span>
              <div class="user-role">{userData.roles.includes('admin') ? 'Administrador' : 'Usuário'}</div>
            </div>
            <div class="dropdown-menu">
              <a href="/admin/profile">Meu Perfil</a>
              <a href="/admin/settings">Configurações</a>
              <a href="#" id="logout-button">Sair</a>
            </div>
          </div>
        </div>
      </div>
    </header>
    
    <aside class="admin-sidebar">
      {currentSection === 'dashboard' && (
        <div class="sidebar-section">
          <h3>Painel</h3>
          <ul>
            <li><a href="/admin" class="active">Visão Geral</a></li>
            <li><a href="/admin/atividade">Atividade Recente</a></li>
            <li><a href="/admin/analytics">Estatísticas</a></li>
            <li><a href="/admin/tarefas">Tarefas</a></li>
          </ul>
        </div>
      )}
      
      {currentSection === 'sites' && (
        <div class="sidebar-section">
          <h3>Sites</h3>
          <ul>
            <li><a href="/admin/sites">Todos os Sites</a></li>
            <li><a href="/admin/sites/criar">Criar Novo Site</a></li>
            <li><a href="/admin/sites/dominios">Domínios</a></li>
            <li><a href="/admin/sites/seo">SEO & Analytics</a></li>
          </ul>
        </div>
      )}
      
      {currentSection === 'themes' && (
        <div class="sidebar-section">
          <h3>Temas</h3>
          <ul>
            <li><a href="/admin/themes">Biblioteca de Temas</a></li>
            <li><a href="/admin/themes/editor">Editor de Tema</a></li>
            <li><a href="/admin/themes/componentes">Componentes</a></li>
            <li><a href="/admin/themes/cores">Cores e Estilos</a></li>
          </ul>
        </div>
      )}
      
      {currentSection === 'media' && (
        <div class="sidebar-section">
          <h3>Mídia</h3>
          <ul>
            <li><a href="/admin/media">Biblioteca de Mídia</a></li>
            <li><a href="/admin/media/upload">Upload de Arquivos</a></li>
            <li><a href="/admin/media/pastas">Pastas</a></li>
            <li><a href="/admin/media/otimizacao">Otimização</a></li>
          </ul>
        </div>
      )}
      
      {currentSection === 'content' && (
        <div class="sidebar-section">
          <h3>Conteúdo</h3>
          <ul>
            <li><a href="/admin/content">Todo Conteúdo</a></li>
            <li><a href="/admin/content/paginas">Páginas</a></li>
            <li><a href="/admin/content/posts">Posts</a></li>
            <li><a href="/admin/content/produtos">Produtos</a></li>
            <li><a href="/admin/content/formularios">Formulários</a></li>
            <li><a href="/admin/content/tipos">Gerenciar Tipos</a></li>
          </ul>
        </div>
      )}
      
      {currentSection === 'users' && (
        <div class="sidebar-section">
          <h3>Usuários</h3>
          <ul>
            <li><a href="/admin/users">Todos os Usuários</a></li>
            <li><a href="/admin/users/criar">Adicionar Usuário</a></li>
            <li><a href="/admin/users/permissoes">Permissões</a></li>
          </ul>
        </div>
      )}
      
      {currentSection === 'settings' && (
        <div class="sidebar-section">
          <h3>Configurações</h3>
          <ul>
            <li><a href="/admin/settings">Configurações Gerais</a></li>
            <li><a href="/admin/settings/aparencia">Aparência</a></li>
            <li><a href="/admin/settings/integracao">Integrações</a></li>
            <li><a href="/admin/settings/seguranca">Segurança</a></li>
            <li><a href="/admin/settings/backups">Backups & Exportação</a></li>
          </ul>
        </div>
      )}
      
      <div class="sidebar-toggle">
        <button id="sidebar-toggle-btn">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="sidebar-icon">
            <polyline points="15 18 9 12 15 6"></polyline>
          </svg>
        </button>
      </div>
    </aside>
    
    <main class="admin-content">
      <slot />
    </main>
    
    <footer class="admin-footer">
      <div class="footer-copyright">
        &copy; 2025 Konduza. Todos os direitos reservados.
      </div>
      <div class="footer-links">
        <a href="https://docs.konduza.com" target="_blank">Documentação</a>
        <a href="https://konduza.com/suporte" target="_blank">Suporte</a>
        <a href="https://konduza.com/termos" target="_blank">Termos</a>
      </div>
      <div class="footer-version">
        Versão 1.0.0
      </div>
    </footer>
  </div>

  <script>
    // Utilitário para lidar com imagens quebradas
    function handleImageFallbacks() {
      // Tratamento para thumbnails de temas
      const themeThumbnails = document.querySelectorAll('.theme-thumbnail img');
      themeThumbnails.forEach(img => {
        if (!img.complete || img.naturalHeight === 0) {
          showThemeFallback(img);
        }
        img.addEventListener('error', () => showThemeFallback(img));
      });
      
      function showThemeFallback(img) {
        const parent = img.parentElement;
        img.style.display = 'none';
        
        // Verificar se já existe um fallback
        let fallback = parent.querySelector('.theme-thumbnail-fallback');
        if (!fallback) {
          fallback = document.createElement('div');
          fallback.className = 'theme-thumbnail-fallback';
          fallback.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round">
              <rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect>
              <line x1="8" y1="21" x2="16" y2="21"></line>
              <line x1="12" y1="17" x2="12" y2="21"></line>
            </svg>
          `;
          parent.appendChild(fallback);
        }
      }
    }

    // Executar quando o DOM estiver carregado
    document.addEventListener('DOMContentLoaded', handleImageFallbacks);
    
    // Scripts para funcionalidades interativas do admin
    document.addEventListener('DOMContentLoaded', () => {
      const sidebarToggleBtn = document.getElementById('sidebar-toggle-btn');
      const mobileMenuBtn = document.getElementById('mobile-menu-btn');
      const adminLayout = document.querySelector('.admin-layout');
      const adminSidebar = document.querySelector('.admin-sidebar');
      const profileToggle = document.querySelector('.profile-toggle');
      const profileDropdown = document.querySelector('.profile-dropdown');
      const logoutButton = document.getElementById('logout-button');
      
      // Os dados do usuário já estão disponíveis no HTML através do servidor
      
      // Armazenar preferência do usuário para o estado da sidebar
      const saveSidebarState = (collapsed) => {
        localStorage.setItem('sidebar_collapsed', collapsed ? 'true' : 'false');
      };
      
      // Recuperar preferência do usuário
      const getSidebarState = () => {
        return localStorage.getItem('sidebar_collapsed') === 'true';
      };
      
      // Inicializar com a preferência salva
      if (getSidebarState()) {
        adminLayout.classList.add('sidebar-collapsed');
      } else {
        adminLayout.classList.remove('sidebar-collapsed');
      }
      
      // Toggle da sidebar desktop
      if (sidebarToggleBtn) {
        sidebarToggleBtn.addEventListener('click', () => {
          const isCollapsed = adminLayout.classList.toggle('sidebar-collapsed');
          saveSidebarState(isCollapsed);
        });
      }
      
      // Toggle do menu mobile
      if (mobileMenuBtn) {
        mobileMenuBtn.addEventListener('click', () => {
          adminLayout.classList.toggle('sidebar-expanded');
          
          // Adicionar overlay para fechar o menu ao clicar fora
          if (adminLayout.classList.contains('sidebar-expanded')) {
            const overlay = document.createElement('div');
            overlay.className = 'sidebar-overlay';
            overlay.addEventListener('click', () => {
              adminLayout.classList.remove('sidebar-expanded');
              document.body.removeChild(overlay);
            });
            document.body.appendChild(overlay);
          } else {
            const overlay = document.querySelector('.sidebar-overlay');
            if (overlay) {
              document.body.removeChild(overlay);
            }
          }
        });
      }
      
      // Toggle do menu de perfil
      if (profileToggle && profileDropdown) {
        profileToggle.addEventListener('click', (e) => {
          e.stopPropagation();
          profileDropdown.classList.toggle('hidden');
        });
        
        // Fechar ao clicar fora
        document.addEventListener('click', () => {
          profileDropdown.classList.add('hidden');
        });
        
        profileDropdown.addEventListener('click', (e) => {
          e.stopPropagation();
        });
      }
      
      // Logout
      if (logoutButton) {
        logoutButton.addEventListener('click', async (e) => {
          e.preventDefault();
          
          try {
            const API_URL = import.meta.env.PAYLOAD_URL || 'http://localhost:3000';
            
            // Chamar API de logout do Payload CMS
            const response = await fetch(`${API_URL}/api/users/logout`, {
              method: 'POST',
              credentials: 'include',
              headers: {
                'Content-Type': 'application/json'
              }
            });
            
            // Mesmo se falhar, vamos limpar o localStorage e redirecionar
            localStorage.removeItem('konduza_user');
            
            // Redirecionar para página de login
            window.location.href = '/login';
          } catch (error) {
            console.error('Erro ao fazer logout:', error);
            
            // Em caso de erro, ainda limpar dados locais e redirecionar
            localStorage.removeItem('konduza_user');
            window.location.href = '/login';
          }
        });
      }
      
      // Responsividade em dispositivos móveis
      const mobileBreakpoint = 768;
      const tabletBreakpoint = 1024;
      
      function handleResize() {
        const windowWidth = window.innerWidth;
        
        if (windowWidth < mobileBreakpoint) {
          // Em dispositivos móveis, sempre começar com sidebar fechada
          adminLayout.classList.remove('sidebar-expanded');
          adminLayout.classList.remove('sidebar-collapsed'); // Resetar para estado padrão no mobile
        } else if (windowWidth < tabletBreakpoint) {
          // Em tablets, colapsar a sidebar se não houver preferência explícita
          if (localStorage.getItem('sidebar_collapsed') === null) {
            adminLayout.classList.add('sidebar-collapsed');
          }
        } else {
          // Em desktops, respeitar a preferência do usuário
          // Ou abrir completamente se não houver preferência
          if (localStorage.getItem('sidebar_collapsed') === null) {
            adminLayout.classList.remove('sidebar-collapsed');
          }
        }
      }
      
      // Verificar no carregamento e no resize
      handleResize();
      window.addEventListener('resize', handleResize);
    });
  </script>
</body>
</html>