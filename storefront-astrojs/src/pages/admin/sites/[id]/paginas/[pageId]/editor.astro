---
// src/pages/admin/sites/[id]/paginas/[pageId]/editor.astro
import AdminLayout from '../../../../../../layouts/AdminLayout.astro';
import PageEditor from '../../../../../../components/react/PageEditor.jsx';
import { getPage, getTemplate, getComponentsForTheme } from '../../../../../../utils/api';

const { id: siteId, pageId } = Astro.params;

// Buscar dados da página do PayloadCMS
const page = await getPage(siteId, pageId);

if (!page) {
  return Astro.redirect('/admin/sites/' + siteId + '/paginas');
}

// Buscar dados do template associado à página
const template = await getTemplate(page.template);

if (!template) {
  throw new Error(`Template não encontrado para a página ${pageId}`);
}

// Buscar componentes disponíveis para o tema
const themeComponents = await getComponentsForTheme(page.siteTheme || '');

// Se não encontrou componentes do tema, usar componentes padrão para desenvolvimento
const availableComponents = themeComponents.length > 0 ? themeComponents : [
  {
    name: 'Navigation',
    displayName: 'Barra de Navegação',
    description: 'Barra de navegação responsiva com logo e links',
    icon: '🧭',
    html: `
      <nav class="site-nav">
        <div class="nav-logo">
          <a href="/"><img src="{{logo}}" alt="Logo" /></a>
        </div>
        <div class="nav-links">
          {{#each links as |link|}}
            <a href="/{{link}}">{{link}}</a>
          {{/each}}
        </div>
        <div class="nav-button">
          <a href="{{buttonUrl}}" class="btn-primary">{{buttonText}}</a>
        </div>
      </nav>
    `,
    css: `.site-nav { display: flex; justify-content: space-between; }`,
    defaultProps: {
      logo: '/uploads/logo.png',
      links: 'Início,Sobre,Serviços,Contato',
      buttonText: 'Contato',
      buttonUrl: '/contato'
    },
    schema: {
      properties: {
        logo: { type: 'string', format: 'image', title: 'Logo' },
        links: { type: 'string', title: 'Links de Navegação' },
        buttonText: { type: 'string', title: 'Texto do Botão' },
        buttonUrl: { type: 'string', title: 'URL do Botão' }
      }
    }
  },
  {
    name: 'TextBlock',
    displayName: 'Bloco de Texto',
    description: 'Bloco de texto com título e conteúdo',
    icon: '📝',
    html: `
      <div class="text-block align-{{alignment}}">
        <h2>{{title}}</h2>
        <div class="text-content">{{content}}</div>
      </div>
    `,
    css: `.text-block { padding: 2rem; } .text-content { line-height: 1.6; }`,
    defaultProps: {
      title: 'Título da Seção',
      content: 'Conteúdo de texto vai aqui.',
      alignment: 'left'
    },
    schema: {
      properties: {
        title: { type: 'string', title: 'Título' },
        content: { type: 'string', format: 'textarea', title: 'Conteúdo' },
        alignment: { 
          type: 'string', 
          enum: ['left', 'center', 'right'], 
          title: 'Alinhamento' 
        }
      }
    }
  }
];

// Função para salvar a página
const handleSavePage = async (updatedPage) => {
  try {
    const response = await fetch('/api/save-page', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-API-Key': import.meta.env.INTERNAL_API_KEY
      },
      body: JSON.stringify({
        pageId: updatedPage.id,
        siteId: updatedPage.siteId,
        regions: updatedPage.regions
      })
    });
    
    const result = await response.json();
    
    if (!result.success) {
      throw new Error(result.error || 'Falha ao salvar a página');
    }
    
    return { success: true };
  } catch (error) {
    console.error('Erro ao salvar página:', error);
    return { success: false, error: error.message };
  }
};
---

<AdminLayout title={`Editor: ${page.title}`} currentSection="sites">
  <div class="page-header">
    <h1>Editor de Página: {page.title}</h1>
    <div class="page-actions">
      <a href={`/admin/sites/${siteId}/paginas`} class="btn-secondary">
        Voltar para Lista
      </a>
      <a href={`/${page.path}`} target="_blank" class="btn-outline">
        Ver Página
      </a>
    </div>
  </div>

  <div class="page-editor-container">
    <PageEditor 
      page={page} 
      template={template} 
      availableComponents={availableComponents} 
      onSave={handleSavePage}
      client:load
    />
  </div>
</AdminLayout>

<style>
  .page-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
  }
  
  .page-header h1 {
    margin: 0;
    font-size: 1.75rem;
    color: var(--text-primary);
  }
  
  .page-actions {
    display: flex;
    gap: 0.75rem;
  }
  
  .btn-secondary, .btn-outline {
    padding: 0.5rem 1rem;
    border-radius: var(--border-radius-sm);
    font-weight: 500;
    font-size: 0.875rem;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
  }
  
  .btn-secondary {
    background-color: var(--secondary);
    color: white;
    border: none;
  }
  
  .btn-secondary:hover {
    background-color: var(--secondary-dark);
  }
  
  .btn-outline {
    background-color: transparent;
    color: var(--primary);
    border: 1px solid var(--primary);
  }
  
  .btn-outline:hover {
    background-color: var(--primary-light);
  }
  
  .page-editor-container {
    position: relative;
    height: calc(100vh - var(--header-height) - var(--footer-height) - 8rem);
  }
  
  /* Estilos para o editor visual de páginas */
  :global(.page-editor) {
    display: flex;
    flex-direction: column;
    height: 100%;
    border: 1px solid var(--border-light);
    border-radius: var(--border-radius-md);
    overflow: hidden;
    background-color: white;
  }
  
  :global(.editor-toolbar) {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem 1rem;
    background-color: var(--bg-light);
    border-bottom: 1px solid var(--border-light);
  }
  
  :global(.editor-tools, .responsive-tools) {
    display: flex;
    gap: 0.5rem;
  }
  
  :global(.toolbar-btn, .device-btn) {
    padding: 0.5rem 0.75rem;
    border: 1px solid var(--border-light);
    border-radius: var(--border-radius-sm);
    background-color: white;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all var(--transition-speed) ease;
  }
  
  :global(.toolbar-btn:hover, .device-btn:hover) {
    border-color: var(--primary);
    color: var(--primary);
  }
  
  :global(.toolbar-btn:disabled) {
    opacity: 0.5;
    cursor: not-allowed;
    border-color: var(--border-light);
    color: inherit;
  }
  
  :global(.device-btn.active) {
    background-color: var(--primary);
    color: white;
    border-color: var(--primary);
  }
  
  :global(.editor-status) {
    margin-left: auto;
  }
  
  :global(.status-badge) {
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    border-radius: 9999px;
  }
  
  :global(.status-badge.warning) {
    background-color: #fff7ed;
    color: #c2410c;
    border: 1px solid #fdba74;
  }
  
  :global(.editor-layout) {
    display: flex;
    height: 100%;
    overflow: hidden;
  }
  
  :global(.editor-sidebar) {
    width: 300px;
    border-right: 1px solid var(--border-light);
    padding: 1rem;
    overflow-y: auto;
    background-color: white;
  }
  
  :global(.editor-canvas) {
    flex: 1;
    overflow-y: auto;
    padding: 1rem;
    background-color: #f3f4f6;
  }
  
  :global(.editor-canvas.tablet) {
    max-width: 768px;
    margin: 0 auto;
    background-color: white;
    border-left: 1px solid var(--border-light);
    border-right: 1px solid var(--border-light);
  }
  
  :global(.editor-canvas.mobile) {
    max-width: 390px;
    margin: 0 auto;
    background-color: white;
    border-left: 1px solid var(--border-light);
    border-right: 1px solid var(--border-light);
  }
  
  :global(.components-list) {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    margin-top: 1rem;
  }
  
  :global(.component-item) {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem;
    border: 1px solid var(--border-light);
    border-radius: var(--border-radius-sm);
    cursor: grab;
    transition: all var(--transition-speed) ease;
    background-color: white;
  }
  
  :global(.component-item:hover) {
    border-color: var(--primary);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  }
  
  :global(.component-icon) {
    font-size: 1.5rem;
    width: 2rem;
    height: 2rem;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  :global(.component-info) {
    flex: 1;
  }
  
  :global(.component-name) {
    font-weight: 500;
    margin-bottom: 0.25rem;
  }
  
  :global(.component-desc) {
    font-size: 0.75rem;
    color: var(--secondary);
  }
  
  :global(.page-container) {
    max-width: 1200px;
    margin: 0 auto;
  }
  
  :global(.region-container) {
    margin-bottom: 2rem;
    background-color: white;
    border-radius: var(--border-radius-md);
    overflow: hidden;
    border: 2px solid #e5e7eb;
    transition: border-color var(--transition-speed) ease;
  }
  
  :global(.region-container.drag-target) {
    border-color: var(--primary);
  }
  
  :global(.region-header) {
    padding: 0.5rem 1rem;
    background-color: #f9fafb;
    border-bottom: 1px solid var(--border-light);
    font-weight: 500;
    font-size: 0.875rem;
    color: var(--secondary);
  }
  
  :global(.region-content) {
    min-height: 100px;
    padding: 1rem;
  }
  
  :global(.component-wrapper) {
    margin-bottom: 1rem;
    border: 1px solid var(--border-light);
    border-radius: var(--border-radius-sm);
    overflow: hidden;
    cursor: grab;
    background-color: white;
  }
  
  :global(.component-wrapper:hover) {
    border-color: var(--primary);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  }
  
  :global(.component-toolbar) {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 0.75rem;
    background-color: #f9fafb;
    border-bottom: 1px solid var(--border-light);
  }
  
  :global(.component-title) {
    font-weight: 500;
    font-size: 0.875rem;
  }
  
  :global(.component-actions) {
    display: flex;
    gap: 0.5rem;
  }
  
  :global(.component-action) {
    background: none;
    border: none;
    cursor: pointer;
    font-size: 1rem;
    opacity: 0.6;
    transition: opacity var(--transition-speed) ease;
  }
  
  :global(.component-action:hover) {
    opacity: 1;
  }
  
  :global(.component-preview) {
    padding: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 100px;
    background-color: white;
  }
  
  :global(.component-placeholder) {
    color: var(--secondary);
    text-align: center;
    padding: 1rem;
    width: 100%;
    border: 1px dashed var(--border-light);
    border-radius: var(--border-radius-sm);
  }
  
  :global(.drop-area) {
    padding: 1.5rem;
    border: 2px dashed var(--border-light);
    border-radius: var(--border-radius-sm);
    text-align: center;
    color: var(--secondary);
    font-size: 0.875rem;
    background-color: #f9fafb;
    transition: all var(--transition-speed) ease;
  }
  
  :global(.drop-area:hover) {
    border-color: var(--primary);
    background-color: rgba(79, 70, 229, 0.05);
  }
  
  /* Estilos do Modal de Edição */
  :global(.component-editor-modal, .preview-modal) {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
  }
  
  :global(.modal-content) {
    background-color: white;
    border-radius: var(--border-radius-md);
    width: 90%;
    max-width: 800px;
    max-height: 90vh;
    display: flex;
    flex-direction: column;
    box-shadow: var(--box-shadow);
  }
  
  :global(.modal-header) {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 1.5rem;
    border-bottom: 1px solid var(--border-light);
  }
  
  :global(.modal-header h2) {
    margin: 0;
    font-size: 1.25rem;
  }
  
  :global(.modal-close) {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: var(--secondary);
  }
  
  :global(.modal-body) {
    padding: 1.5rem;
    overflow-y: auto;
    flex: 1;
  }
  
  :global(.properties-form) {
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
  }
  
  :global(.form-actions) {
    display: flex;
    justify-content: flex-end;
    gap: 0.75rem;
    margin-top: 1.5rem;
    padding-top: 1.5rem;
    border-top: 1px solid var(--border-light);
  }
  
  :global(.color-picker) {
    display: flex;
    gap: 0.5rem;
    align-items: center;
  }
  
  :global(.image-selector) {
    display: flex;
    gap: 0.5rem;
  }
  
  :global(.property-hint) {
    margin-left: 0.5rem;
    cursor: help;
  }
  
  :global(.preview-container) {
    width: 100%;
    height: 600px;
    max-height: 60vh;
    background-color: #f9fafb;
    border: 1px solid var(--border-light);
    border-radius: var(--border-radius-sm);
    overflow: hidden;
  }
  
  :global(.preview-container.tablet) {
    width: 768px;
    margin: 0 auto;
  }
  
  :global(.preview-container.mobile) {
    width: 390px;
    margin: 0 auto;
  }
  
  :global(.preview-iframe) {
    width: 100%;
    height: 100%;
    border: none;
  }
  
  /* Toast de notificação */
  :global(.toast) {
    position: fixed;
    bottom: 1.5rem;
    right: 1.5rem;
    padding: 1rem 1.5rem;
    border-radius: var(--border-radius-sm);
    background-color: white;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    animation: slideInRight 0.3s ease, fadeOut 0.3s ease 3s forwards;
    z-index: 1050;
  }
  
  :global(.toast.success) {
    border-left: 4px solid #10b981;
  }
  
  :global(.toast.error) {
    border-left: 4px solid #ef4444;
  }
  
  @keyframes slideInRight {
    from { transform: translateX(100%); }
    to { transform: translateX(0); }
  }
  
  @keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
  }
  
  /* Responsividade */
  @media (max-width: 768px) {
    .page-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }
    
    :global(.editor-layout) {
      flex-direction: column;
    }
    
    :global(.editor-sidebar) {
      width: 100%;
      border-right: none;
      border-bottom: 1px solid var(--border-light);
      max-height: 300px;
    }
    
    :global(.modal-content) {
      width: 95%;
    }
  }
</style>