---
import AdminLayout from '../../layouts/AdminLayout.astro';
import { getAdminSession } from '../../utils/api.js';
import UserAvatar from '../../components/UserAvatar.astro';

// Verificar autenticação do admin
const session = await getAdminSession(Astro.request);
if (!session) {
  return Astro.redirect('/login?redirect=/admin/tarefas');
}

// Dados para o template
const pageTitle = "Tarefas";

// Dados simulados
const tarefas = [
  {
    id: '1',
    titulo: 'Atualizar conteúdo da página inicial',
    descricao: 'Revisar e atualizar o conteúdo da página inicial para a promoção de verão',
    status: 'pendente',
    prioridade: 'alta',
    dataCriacao: '2025-03-05T10:15:00Z',
    dataVencimento: '2025-03-10T23:59:59Z',
    responsavel: {
      nome: 'João Silva',
      email: 'joao@exemplo.com',
      avatarUrl: null
    },
    comentarios: 2
  },
  {
    id: '2',
    titulo: 'Resolver bug no formulário de contato',
    descricao: 'Corrigir o bug que impede o envio do formulário de contato em navegadores Safari',
    status: 'em-progresso',
    prioridade: 'crítica',
    dataCriacao: '2025-03-06T08:30:00Z',
    dataVencimento: '2025-03-08T23:59:59Z',
    responsavel: {
      nome: 'Ana Souza',
      email: 'ana@exemplo.com',
      avatarUrl: null
    },
    comentarios: 5
  },
  {
    id: '3',
    titulo: 'Atualizar plugins do sistema',
    descricao: 'Fazer update de todos os plugins para as versões mais recentes',
    status: 'concluido',
    prioridade: 'média',
    dataCriacao: '2025-03-02T14:20:00Z',
    dataVencimento: '2025-03-06T23:59:59Z',
    responsavel: {
      nome: 'Admin Principal',
      email: 'admin@konduza.com',
      avatarUrl: null
    },
    comentarios: 0
  },
  {
    id: '4',
    titulo: 'Preparar conteúdo para redes sociais',
    descricao: 'Criar publicações para as redes sociais sobre o lançamento do novo produto',
    status: 'pendente',
    prioridade: 'baixa',
    dataCriacao: '2025-03-06T15:45:00Z',
    dataVencimento: '2025-03-15T23:59:59Z',
    responsavel: {
      nome: 'Maria Oliveira',
      email: 'maria@exemplo.com',
      avatarUrl: null
    },
    comentarios: 3
  },
  {
    id: '5',
    titulo: 'Otimizar imagens do catálogo',
    descricao: 'Reduzir o tamanho das imagens do catálogo de produtos para melhorar o desempenho',
    status: 'em-progresso',
    prioridade: 'média',
    dataCriacao: '2025-03-05T11:30:00Z',
    dataVencimento: '2025-03-12T23:59:59Z',
    responsavel: {
      nome: 'Pedro Santos',
      email: 'pedro@exemplo.com',
      avatarUrl: null
    },
    comentarios: 1
  },
  {
    id: '6',
    titulo: 'Configurar Google Analytics',
    descricao: 'Configurar o Google Analytics para o novo site e validar os dados',
    status: 'pendente',
    prioridade: 'média',
    dataCriacao: '2025-03-07T09:10:00Z',
    dataVencimento: '2025-03-14T23:59:59Z',
    responsavel: {
      nome: 'Admin Principal',
      email: 'admin@konduza.com',
      avatarUrl: null
    },
    comentarios: 0
  }
];

// Funções helpers
const formatDate = (dateString) => {
  const date = new Date(dateString);
  return date.toLocaleDateString('pt-BR', {
    day: '2-digit',
    month: '2-digit',
    year: 'numeric'
  });
};

const getStatusLabel = (status) => {
  const statusMap = {
    'pendente': { label: 'Pendente', class: 'bg-yellow-100 text-yellow-800' },
    'em-progresso': { label: 'Em Progresso', class: 'bg-blue-100 text-blue-800' },
    'concluido': { label: 'Concluído', class: 'bg-green-100 text-green-800' },
    'cancelado': { label: 'Cancelado', class: 'bg-gray-100 text-gray-800' }
  };
  
  return statusMap[status] || { label: status, class: 'bg-gray-100 text-gray-800' };
};

const getPriorityLabel = (prioridade) => {
  const prioridadeMap = {
    'baixa': { label: 'Baixa', class: 'bg-green-100 text-green-800' },
    'média': { label: 'Média', class: 'bg-blue-100 text-blue-800' },
    'alta': { label: 'Alta', class: 'bg-orange-100 text-orange-800' },
    'crítica': { label: 'Crítica', class: 'bg-red-100 text-red-800' }
  };
  
  return prioridadeMap[prioridade] || { label: prioridade, class: 'bg-gray-100 text-gray-800' };
};

const getDaysRemaining = (dataVencimento) => {
  const hoje = new Date();
  const vencimento = new Date(dataVencimento);
  const diffTime = vencimento - hoje;
  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
  
  return diffDays;
};
---

<AdminLayout title={pageTitle} currentSection="dashboard" userData={session}>
  <div class="content-container">
    <div class="page-header">
      <div class="page-title">
        <h1 class="text-2xl font-bold">{pageTitle}</h1>
        <p class="text-sm text-gray-600">Gerencie suas tarefas e responsabilidades</p>
      </div>
      <div class="page-actions">
        <button class="btn-primary">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-1">
            <line x1="12" y1="5" x2="12" y2="19"></line>
            <line x1="5" y1="12" x2="19" y2="12"></line>
          </svg>
          Nova Tarefa
        </button>
      </div>
    </div>
    
    <div class="mt-6 flex flex-col lg:flex-row gap-6">
      <!-- Filtros e Barra Lateral -->
      <div class="w-full lg:w-64 flex-shrink-0">
        <div class="bg-white p-4 rounded-lg shadow-md">
          <h2 class="font-medium mb-4">Filtros</h2>
          
          <div class="space-y-4">
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Status</label>
              <div class="space-y-2">
                <div class="flex items-center">
                  <input type="checkbox" id="status-all" class="h-4 w-4 text-blue-600 rounded" checked />
                  <label for="status-all" class="ml-2 text-sm text-gray-700">Todos</label>
                </div>
                <div class="flex items-center">
                  <input type="checkbox" id="status-pendente" class="h-4 w-4 text-blue-600 rounded" />
                  <label for="status-pendente" class="ml-2 text-sm text-gray-700">Pendente</label>
                </div>
                <div class="flex items-center">
                  <input type="checkbox" id="status-progresso" class="h-4 w-4 text-blue-600 rounded" />
                  <label for="status-progresso" class="ml-2 text-sm text-gray-700">Em Progresso</label>
                </div>
                <div class="flex items-center">
                  <input type="checkbox" id="status-concluido" class="h-4 w-4 text-blue-600 rounded" />
                  <label for="status-concluido" class="ml-2 text-sm text-gray-700">Concluído</label>
                </div>
              </div>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Prioridade</label>
              <div class="space-y-2">
                <div class="flex items-center">
                  <input type="checkbox" id="prioridade-all" class="h-4 w-4 text-blue-600 rounded" checked />
                  <label for="prioridade-all" class="ml-2 text-sm text-gray-700">Todas</label>
                </div>
                <div class="flex items-center">
                  <input type="checkbox" id="prioridade-critica" class="h-4 w-4 text-blue-600 rounded" />
                  <label for="prioridade-critica" class="ml-2 text-sm text-gray-700">Crítica</label>
                </div>
                <div class="flex items-center">
                  <input type="checkbox" id="prioridade-alta" class="h-4 w-4 text-blue-600 rounded" />
                  <label for="prioridade-alta" class="ml-2 text-sm text-gray-700">Alta</label>
                </div>
                <div class="flex items-center">
                  <input type="checkbox" id="prioridade-media" class="h-4 w-4 text-blue-600 rounded" />
                  <label for="prioridade-media" class="ml-2 text-sm text-gray-700">Média</label>
                </div>
                <div class="flex items-center">
                  <input type="checkbox" id="prioridade-baixa" class="h-4 w-4 text-blue-600 rounded" />
                  <label for="prioridade-baixa" class="ml-2 text-sm text-gray-700">Baixa</label>
                </div>
              </div>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Responsável</label>
              <select class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm">
                <option value="">Todos</option>
                <option value="admin">Admin Principal</option>
                <option value="joao">João Silva</option>
                <option value="maria">Maria Oliveira</option>
                <option value="pedro">Pedro Santos</option>
                <option value="ana">Ana Souza</option>
              </select>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Vencimento</label>
              <select class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm">
                <option value="">Qualquer data</option>
                <option value="today">Hoje</option>
                <option value="tomorrow">Amanhã</option>
                <option value="week">Esta semana</option>
                <option value="month">Este mês</option>
                <option value="overdue">Atrasado</option>
              </select>
            </div>
            
            <div class="pt-4 border-t border-gray-200">
              <button class="w-full px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 text-sm">
                Aplicar Filtros
              </button>
              <button class="w-full mt-2 px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 text-sm">
                Limpar Filtros
              </button>
            </div>
          </div>
        </div>
        
        <div class="bg-white p-4 rounded-lg shadow-md mt-4">
          <h2 class="font-medium mb-3">Resumo</h2>
          <div class="space-y-2">
            <div class="flex justify-between">
              <span class="text-sm text-gray-600">Total de tarefas:</span>
              <span class="text-sm font-medium">{tarefas.length}</span>
            </div>
            <div class="flex justify-between">
              <span class="text-sm text-gray-600">Pendentes:</span>
              <span class="text-sm font-medium">{tarefas.filter(t => t.status === 'pendente').length}</span>
            </div>
            <div class="flex justify-between">
              <span class="text-sm text-gray-600">Em progresso:</span>
              <span class="text-sm font-medium">{tarefas.filter(t => t.status === 'em-progresso').length}</span>
            </div>
            <div class="flex justify-between">
              <span class="text-sm text-gray-600">Concluídas:</span>
              <span class="text-sm font-medium">{tarefas.filter(t => t.status === 'concluido').length}</span>
            </div>
            <div class="border-t border-gray-200 pt-2 mt-2">
              <div class="flex justify-between">
                <span class="text-sm text-gray-600">Atrasadas:</span>
                <span class="text-sm font-medium text-red-600">
                  {tarefas.filter(t => t.status !== 'concluido' && getDaysRemaining(t.dataVencimento) < 0).length}
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Lista de Tarefas -->
      <div class="flex-1">
        <div class="bg-white rounded-lg shadow-md overflow-hidden">
          <!-- Cabeçalho e Busca -->
          <div class="p-4 border-b border-gray-200 flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
            <h2 class="font-medium">Lista de Tarefas</h2>
            <div class="relative">
              <input type="text" placeholder="Buscar tarefas..." class="pl-8 pr-4 py-2 border rounded-md focus:ring-blue-500 focus:border-blue-500 text-sm w-full sm:w-auto" />
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 absolute left-2.5 top-3 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
              </svg>
            </div>
          </div>
          
          <!-- Lista de Tarefas -->
          <ul class="divide-y divide-gray-200">
            {tarefas.map(tarefa => {
              const statusInfo = getStatusLabel(tarefa.status);
              const prioridadeInfo = getPriorityLabel(tarefa.prioridade);
              const diasRestantes = getDaysRemaining(tarefa.dataVencimento);
              
              return (
                <li class="p-4 hover:bg-gray-50 transition-colors duration-150">
                  <div class="flex flex-col sm:flex-row sm:items-center justify-between gap-4">
                    <div class="flex-1">
                      <div class="flex items-start">
                        <input type="checkbox" checked={tarefa.status === 'concluido'} class="mt-1 h-4 w-4 text-blue-600 rounded" />
                        <div class="ml-3">
                          <h3 class={`text-sm font-medium ${tarefa.status === 'concluido' ? 'text-gray-500 line-through' : 'text-gray-900'}`}>
                            {tarefa.titulo}
                          </h3>
                          <p class="mt-1 text-sm text-gray-600 line-clamp-2">{tarefa.descricao}</p>
                          <div class="mt-2 flex flex-wrap items-center gap-2">
                            <span class={`inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${statusInfo.class}`}>
                              {statusInfo.label}
                            </span>
                            <span class={`inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${prioridadeInfo.class}`}>
                              {prioridadeInfo.label}
                            </span>
                            {tarefa.comentarios > 0 && (
                              <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" viewBox="0 0 20 20" fill="currentColor">
                                  <path fill-rule="evenodd" d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z" clip-rule="evenodd" />
                                </svg>
                                {tarefa.comentarios}
                              </span>
                            )}
                          </div>
                        </div>
                      </div>
                    </div>
                    
                    <div class="flex flex-col sm:items-end">
                      <div class="flex items-center sm:justify-end">
                        <UserAvatar name={tarefa.responsavel.nome} avatarUrl={tarefa.responsavel.avatarUrl} size="sm" />
                        <span class="ml-2 text-xs text-gray-500">{tarefa.responsavel.nome}</span>
                      </div>
                      
                      <div class="mt-2 flex items-center sm:justify-end">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400 mr-1" viewBox="0 0 20 20" fill="currentColor">
                          <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
                        </svg>
                        <span class={`text-xs ${diasRestantes < 0 ? 'text-red-600 font-medium' : 'text-gray-500'}`}>
                          {diasRestantes < 0 
                            ? `Atrasada há ${Math.abs(diasRestantes)} dias` 
                            : diasRestantes === 0 
                              ? 'Vence hoje'
                              : `Vence em ${diasRestantes} dias`
                          }
                        </span>
                      </div>
                      
                      <div class="mt-3 flex sm:justify-end space-x-2">
                        <button class="text-xs text-blue-600 hover:text-blue-800">Editar</button>
                        <button class="text-xs text-gray-600 hover:text-gray-800">Detalhes</button>
                      </div>
                    </div>
                  </div>
                </li>
              );
            })}
          </ul>
          
          <!-- Paginação -->
          <div class="px-4 py-3 border-t border-gray-200 flex items-center justify-between">
            <div class="text-sm text-gray-700">
              Mostrando <span class="font-medium">1</span> a <span class="font-medium">{tarefas.length}</span> de <span class="font-medium">{tarefas.length}</span> tarefas
            </div>
            <div class="flex space-x-2">
              <button disabled class="px-3 py-1 rounded border border-gray-300 bg-gray-100 text-gray-400 cursor-not-allowed">
                Anterior
              </button>
              <button disabled class="px-3 py-1 rounded border border-gray-300 bg-gray-100 text-gray-400 cursor-not-allowed">
                Próximo
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</AdminLayout>

<style>
  .btn-primary {
    @apply inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2;
  }
  
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>